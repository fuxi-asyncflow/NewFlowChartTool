<UserControl
    x:Class="NFCT.Graph.Views.GraphNode"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:common="clr-namespace:NFCT.Common;assembly=NFCT.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:NFCT.Graph.Views"
    xmlns:localization="clr-namespace:NFCT.Common.Localization;assembly=NFCT.Common"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:utility="clr-namespace:NFCT.Graph.Utility"
    xmlns:vm="clr-namespace:NFCT.Graph.ViewModels"
    d:DataContext="{d:DesignInstance vm:BaseNodeViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.Resources>
        <DataTemplate x:Key="StartNodeTemplate">
            <local:StartNode />
        </DataTemplate>
        <DataTemplate x:Key="TextNodeTemplate">
            <local:TextNode />
        </DataTemplate>
        <DataTemplate x:Key="ControlNodeTemplate">
            <local:ControlNode />
        </DataTemplate>
        <utility:GraphNodesTemplateSelector
            x:Key="GraphNodesTemplateSelector"
            ControlNodeTemplate="{StaticResource ControlNodeTemplate}"
            StartNodeTemplate="{StaticResource StartNodeTemplate}"
            TextNodeTemplate="{StaticResource TextNodeTemplate}" />
        <utility:CutOpacityConverter x:Key="CutOpacityConverter" />
        <common:EmptyStringVisibilityConverter x:Key="EmptyStringVisibilityConverter" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </UserControl.Resources>
    <UserControl.ContextMenu>
        <ContextMenu>
            <MenuItem Command="{Binding BeginConnectCommand}" Header="{DynamicResource {x:Static localization:ResourceKeys.Menu_ConnectNodes}}" />
            <MenuItem Command="{Binding CutNodesCommand}" Header="{DynamicResource {x:Static localization:ResourceKeys.Common_Cut}}" />
            <MenuItem Command="{Binding CopyNodesCommand}" Header="{DynamicResource {x:Static localization:ResourceKeys.Common_Copy}}" />
            <MenuItem Command="{Binding PasteNodesCommand}" Header="{DynamicResource {x:Static localization:ResourceKeys.Common_Paste}}" />
            <Separator />
            <MenuItem Command="{Binding EditDescriptionCommand}" Header="{DynamicResource {x:Static localization:ResourceKeys.Menu_ModifyDescriptionKey}}" />
            <Separator />
            <MenuItem Command="{Binding BreakPointCommand}" Header="{DynamicResource {x:Static localization:ResourceKeys.Menu_BreakPoint}}" />
            <MenuItem Command="{Binding ContinueBreakPointCommand}" Header="{DynamicResource {x:Static localization:ResourceKeys.ToolBar_ContinueDebug}}" />
        </ContextMenu>
    </UserControl.ContextMenu>
    <Grid
        common:FocusExtension.IsFocused="{Binding IsFocused}"
        utility:SizeObserver.Observe="True"
        utility:SizeObserver.ObservedHeight="{Binding ActualHeight, Mode=OneWayToSource}"
        utility:SizeObserver.ObservedWidth="{Binding ActualWidth, Mode=OneWayToSource}"
        Focusable="True"
        MouseDown="NodeGrid_OnMouseDown"
        Opacity="{Binding IsCut, Converter={StaticResource CutOpacityConverter}}"
        RequestBringIntoView="Node_OnRequestBringIntoView"
        ToolTip="{Binding ToolTip}">

        <StackPanel Orientation="Horizontal">
            <StackPanel Visibility="{Binding IsDebugMode, Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBlock Text="{Binding SuccessCount}" />
                <TextBlock Text="{Binding FailureCount}" />
            </StackPanel>
            <ContentControl Content="{Binding}" ContentTemplateSelector="{StaticResource GraphNodesTemplateSelector}" />
        </StackPanel>
        <Polygon
            Fill="Red"
            FlowDirection="RightToLeft"
            Points="0,0 15,0 0,15 0,0"
            Visibility="{Binding IsBreakPoint, Converter={StaticResource BooleanToVisibilityConverter}}" />

        <b:Interaction.Triggers>
            <b:EventTrigger EventName="KeyDown">
                <prism:InvokeCommandAction Command="{Binding OnKeyDownCommand}" />
            </b:EventTrigger>
        </b:Interaction.Triggers>
    </Grid>

</UserControl>
