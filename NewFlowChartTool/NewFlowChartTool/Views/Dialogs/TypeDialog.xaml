<UserControl
    x:Class="NewFlowChartTool.Views.TypeDialog"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:common="clr-namespace:NFCT.Common;assembly=NFCT.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:NewFlowChartTool.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:vm="clr-namespace:NewFlowChartTool.ViewModels"
    d:DataContext="{d:DesignInstance vm:TypeDialogViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    prism:Dialog.WindowStyle="{DynamicResource CustomWindowStyle}"
    mc:Ignorable="d">
    <UserControl.Resources>
        <common:RadioBoolToIntConverter x:Key="RadioBoolToIntConverter" />
    </UserControl.Resources>

    <StackPanel>
        <StackPanel Height="32" Orientation="Horizontal">
            <ComboBox
                x:Name="TypeCombo"
                MinWidth="100"
                BorderBrush="{DynamicResource HightlightBorderBrush}"
                ItemsSource="{Binding Types}"
                SelectedItem="{Binding SelectedType}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <prism:InvokeCommandAction Command="{Binding SelectedTypeChangeCommand}" CommandParameter="{Binding SelectedType}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <Button Command="{Binding AddNewTypeCommand}" Content="New Type" />

        </StackPanel>
        <DataGrid
            MinHeight="120"
            AutoGenerateColumns="False"
            Background="Green"
            CanUserAddRows="False"
            ItemsSource="{Binding Members}"
            ScrollViewer.CanContentScroll="True"
            ScrollViewer.HorizontalScrollBarVisibility="Auto"
            ScrollViewer.VerticalScrollBarVisibility="Auto"
            SelectedItem="{Binding SelectedMember, Mode=TwoWay}">
            <DataGrid.Resources>

                <Style TargetType="DataGridRow">
                    <Setter Property="Background" Value="{DynamicResource BackGroundBrush}" />
                </Style>
                <Style TargetType="DataGridRowHeader">
                    <Setter Property="Background" Value="{DynamicResource BackGroundBrush}" />
                </Style>
                <Style TargetType="DataGridCell">
                    <Setter Property="Foreground" Value="{DynamicResource ForeGroundBrush}" />
                </Style>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="Background" Value="{DynamicResource BackGroundBrush}" />
                </Style>
                <Style TargetType="Border">
                    <Setter Property="Background" Value="{DynamicResource BackGroundBrush}" />
                </Style>
            </DataGrid.Resources>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <prism:InvokeCommandAction Command="{Binding SelectedMemberChangeCommand}" CommandParameter="{Binding SelectedMember}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <DataGrid.Columns>
                <DataGridTextColumn
                    MinWidth="64"
                    Binding="{Binding Name, Mode=OneWay}"
                    Header="name" />
                <DataGridTextColumn
                    MinWidth="64"
                    Binding="{Binding Type, Mode=OneWay}"
                    Header="type" />
                <DataGridTextColumn Binding="{Binding Parameters, Mode=OneWay}" Header="parameters" />
            </DataGrid.Columns>
        </DataGrid>
        <Separator />
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="Name" />
            <TextBox MinWidth="80" Text="{Binding MemberName}" />
            <TextBlock Text="Type" />
            <TextBox MinWidth="80" Text="{Binding MemberType}" />
            <RadioButton
                x:Name="PropRadio"
                Width="69"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                GroupName="MemberKind"
                IsChecked="{Binding MemberKind, Converter={StaticResource RadioBoolToIntConverter}, ConverterParameter=1}">
                <TextBlock Text="Property" />
            </RadioButton>
            <RadioButton
                x:Name="MethodRadio"
                Width="81"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                GroupName="MemberKind"
                IsChecked="{Binding MemberKind, Converter={StaticResource RadioBoolToIntConverter}, ConverterParameter=2}">
                <TextBlock Text="Method" />
            </RadioButton>
            <Button Command="{Binding AddNewPropertyCommand}" Content="New Property" />
            <Button
                Margin="20,0"
                Command="{Binding AddNewMethodCommand}"
                Content="New Method" />
        </StackPanel>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="200" />
            </Grid.ColumnDefinitions>

            <DataGrid
                MinHeight="120"
                AutoGenerateColumns="False"
                Background="{DynamicResource HightlightBackGroundBrush}"
                ItemsSource="{Binding Parameters}"
                ScrollViewer.CanContentScroll="True"
                ScrollViewer.HorizontalScrollBarVisibility="Auto"
                ScrollViewer.VerticalScrollBarVisibility="Auto"
                SelectedItem="{Binding SelectedParameter}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <prism:InvokeCommandAction Command="{Binding SelectedParamChangeCommand}" CommandParameter="{Binding SelectedParameter}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <DataGrid.Resources>
                    <Style TargetType="DataGridRow">
                        <Setter Property="Background" Value="{DynamicResource BackGroundBrush}" />
                    </Style>
                    <Style TargetType="DataGridRowHeader">
                        <Setter Property="Background" Value="{DynamicResource BackGroundBrush}" />
                    </Style>
                    <Style TargetType="DataGridCell">
                        <Setter Property="Foreground" Value="{DynamicResource ForeGroundBrush}" />
                        <Style.Triggers>
                            <!--<DataTrigger Binding="{Binding IsActive}" Value="{x:Null}">
                                    <Setter Property="Foreground" Value="Green" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsActive}" Value="True">
                                    <Setter Property="Foreground" Value="Red" />
                                </DataTrigger>-->
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="Background" Value="{DynamicResource BackGroundBrush}" />
                    </Style>
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTextColumn
                        MinWidth="64"
                        Binding="{Binding Name, Mode=OneWay}"
                        Header="name" />
                    <DataGridTextColumn
                        MinWidth="64"
                        Binding="{Binding Type, Mode=OneWay}"
                        Header="type" />
                    <DataGridTextColumn
                        MinWidth="64"
                        Binding="{Binding DefaultValue, Mode=OneWay}"
                        Header="value" />
                    <DataGridTextColumn Binding="{Binding Description, Mode=OneWay}" Header="description" />
                </DataGrid.Columns>
            </DataGrid>
            <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="2*" />
                </Grid.ColumnDefinitions>
                <StackPanel>
                    <TextBlock Text="Name" />
                    <TextBlock Text="Type" />
                    <TextBlock Text="Value" />
                    <TextBlock Text="Description" />
                </StackPanel>
                <StackPanel Grid.Column="1">
                    <TextBox Text="{Binding ParaName, Mode=TwoWay}" />
                    <TextBox Text="{Binding ParaType, Mode=TwoWay}" />
                    <TextBox Text="{Binding ParaValue, Mode=TwoWay}" />
                    <TextBox Text="{Binding ParaDescription, Mode=TwoWay}" />
                </StackPanel>
            </Grid>


        </Grid>
        <Button Command="{Binding SaveCommand}" Content="Save" />
    </StackPanel>
</UserControl>
